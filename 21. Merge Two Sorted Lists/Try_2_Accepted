# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def listToListnode(self, result):
        if not result:
            return ListNode('')
        else:
            ind = 1
            start = ListNode(result[0])
            end = start
            while ind < len(result):
                end.next= ListNode(result[ind])
                end = end.next
                ind += 1
            return start
    
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        merged_list = []
        while l1 and l2:
            if l1.val < l2.val:
                merged_list.append(l1.val)
                l1 = l1.next
            else:
                merged_list.append(l2.val)
                l2 = l2.next
        if l1:
            while l1:
                merged_list.append(l1.val)
                l1 = l1.next
        if l2:
            while l2:
                merged_list.append(l2.val)
                l2 = l2.next
        return self.listToListnode(merged_list)
